name: Build Docker images

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on pushes to `main`
  push:
    branches:
      - main

env:
  PLATFORMS: linux/arm/v7,linux/arm64/v8,linux/amd64
  IMAGE_NAME: cryptpad

jobs:
  build-image:
    name: Build cryptpad Docker image
    strategy:
      matrix:
        IMAGE_TYPE: ["", "-alpine", "-nginx", "-nginx-alpine"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get latest Cryptpad tag
        id: cryptpad-version
        run: |
          cd cryptpad
          git fetch --tags
          LATEST_TAG_REV=$(git rev-list --tags --max-count 1)
          CRYPTPAD_VERSION=$(git describe --tags ${LATEST_TAG_REV})
          echo "CRYPTPAD_VERSION=${CRYPTPAD_VERSION}" >> $GITHUB_OUTPUT
          git checkout ${CRYPTPAD_VERSION}

      - name: Check whether v${{ steps.cryptpad-version.outputs.CRYPTPAD_VERSION }} needs building
        id: build-release
        run: |
          # Check whether there already is a Docker image for the current tag
          echo "BUILD_RELEASE=true" >> $GITHUB_OUTPUT
          SERVER_TAGS=$(curl --fail -s https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}${{ matrix.IMAGE_TYPE }}/tags | jq -r ".results[].name")
          for tag in ${SERVER_TAGS[@]}; do
            if [[ "$tag" == "${{ steps.cryptpad-version.outputs.CRYPTPAD_VERSION }}" ]]; then
              echo "Release ${tag} has already been built."
              echo "BUILD_RELEASE=false" >> $GITHUB_OUTPUT
              exit
            fi
          done

      - name: Set Docker metadata
        if: ${{ steps.build-release.outputs.BUILD_RELEASE == 'true' }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,v${{ steps.cryptpad-version.outputs.CRYPTPAD_VERSION }}${{ matrix.IMAGE_TYPE }}
            type=raw,latest${{ matrix.IMAGE_TYPE }}

      - name: Docker Setup QEMU
        if: ${{ steps.build-release.outputs.BUILD_RELEASE == 'true' }}
        uses: docker/setup-qemu-action@v2

      - name: Docker Setup Buildx
        if: ${{ steps.build-release.outputs.BUILD_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: ${{ steps.build-release.outputs.BUILD_RELEASE == 'true' }}
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ steps.build-release.outputs.BUILD_RELEASE == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push ${{ env.IMAGE_NAME }}${{ matrix.IMAGE_TYPE }} image
        if: ${{ steps.build-release.outputs.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile${{ matrix.IMAGE_TYPE }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ inputs.PUSH_IMAGE }}
          labels: ${{ steps.meta.outputs.labels }}
